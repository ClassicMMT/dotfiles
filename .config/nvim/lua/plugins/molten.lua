return {
  -- -- IMPORTANT NOTES:
  -- -- A virtual environment must have pynvim and jupyter-client so:
  -- -- run: "pip install pynvim", "pip install jupyter-client"
  -- --
  -- -- Fuzzy search the config for references of molten.nvim to see what needs to be enabled
  -- {
  --   -- run: "pip install pynvim", "pip install jupyter-client"
  --   "benlubas/molten-nvim",
  --   version = "^1.0.0", -- use version <2.0.0 to avoid breaking changes
  --   ft = { "quarto" },
  --   dependencies = { "3rd/image.nvim" },
  --   build = ":UpdateRemotePlugins",
  --   init = function()
  --     -- these are examples, not defaults. Please see the readme
  --     vim.g.molten_image_provider = "image.nvim"
  --     -- required for wezterm
  --     vim.g.molten_auto_open_output = false
  --     vim.g.molten_output_win_max_height = 20
  --     -- vim.g.molten_auto_init_behavior = "init"
  --     vim.g.molten_wrap_output = true
  --     vim.g.molten_virt_text_output = true
  --     vim.g.molten_virt_lines_off_by_1 = true
  --
  --     local map = vim.keymap.set
  --     -- Keymaps
  --     map("n", "<localleader>mi", ":MoltenInit<CR>", { silent = true, desc = "Initialize the plugin" })
  --     -- map("n", "<localleader>e", ":MoltenEvaluateOperator<CR>", { silent = true, desc = "run operator selection" })
  --     -- map("n", "<localleader>rl", ":MoltenEvaluateLine<CR>", { silent = true, desc = "evaluate line" })
  --     -- map("n", "<localleader>rr", ":MoltenReevaluateCell<CR>", { silent = true, desc = "re-evaluate cell" })
  --     -- map(
  --     --   "v",
  --     --   "<localleader>r",
  --     --   ":<C-u>MoltenEvaluateVisual<CR>gv",
  --     --   { silent = true, desc = "evaluate visual selection" }
  --     -- )
  --     -- map("n", "<localleader>os", ":noautocmd MoltenEnterOutput<CR>", { desc = "open output window", silent = true })
  --   end,
  -- },
  --
  -- {
  --   -- see the image.nvim readme for more information about configuring this plugin
  --   "3rd/image.nvim",
  --   build = false,
  --   opts = {
  --     backend = "kitty", -- whatever backend you would like to use
  --     -- backend = "wezterm",
  --     processor = "magick_cli",
  --     max_width = 100,
  --     max_height = 12,
  --     max_height_window_percentage = math.huge,
  --     max_width_window_percentage = math.huge,
  --     window_overlap_clear_enabled = true, -- toggles images when windows are overlapped
  --     window_overlap_clear_ft_ignore = { "cmp_menu", "cmp_docs", "" },
  --   },
  -- },
  --
  -- -- {
  -- --   "willothy/wezterm.nvim",
  -- --   config = true,
  -- -- },
  --
  -- {
  --   "quarto-dev/quarto-nvim",
  --   ft = { "quarto", "markdown" },
  --   config = function()
  --     require("quarto").setup {
  --       lspFeatures = {
  --         enabled = true,
  --         languages = {
  --           -- "r",
  --           "python",
  --           -- "julia",
  --           -- "bash",
  --           -- "html",
  --         },
  --       },
  --
  --       chunks = "all",
  --
  --       diagnostics = {
  --         enabled = true,
  --         triggers = { "BufWritePost" },
  --       },
  --
  --       completion = {
  --         enabled = true,
  --       },
  --
  --       keymap = {
  --         -- hover = "H",
  --         definition = "gd",
  --         format = "<leader>gf",
  --       },
  --
  --       codeRunner = {
  --         enabled = true,
  --         default_method = "molten",
  --         ft_runners = { python = "iron" },
  --       },
  --     }
  --
  --     local runner = require "quarto.runner"
  --     vim.keymap.set("n", "<localleader>rc", runner.run_cell, { desc = "run cell", silent = true })
  --     vim.keymap.set("n", "<localleader>ra", runner.run_above, { desc = "run cell and above", silent = true })
  --     vim.keymap.set("n", "<localleader>rA", runner.run_all, { desc = "run all cells", silent = true })
  --     vim.keymap.set("n", "<localleader>rl", runner.run_line, { desc = "run line", silent = true })
  --     vim.keymap.set("v", "<localleader>r", runner.run_range, { desc = "run visual range", silent = true })
  --     vim.keymap.set("n", "<localleader>RA", function()
  --       runner.run_all(true)
  --     end, { desc = "run all cells of all languages", silent = true })
  --   end,
  --   dependencies = {
  --     "jmbuhr/otter.nvim",
  --   },
  -- },
  --
  -- {
  --   "GCBallesteros/jupytext.nvim",
  --   config = function()
  --     require("jupytext").setup {
  --       style = "markdown",
  --       output_extension = "md",
  --       force_ft = "markdown",
  --     }
  --   end,
  -- },
}
